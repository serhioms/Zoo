package leetcode.costroad;

import org.junit.BeforeClass;
import org.junit.Test;
import util.TestAutomation;
import static org.junit.Assert.assertEquals;

/*
    1044 / 1044 test cases passed.
    Status: Accepted
Report         My =    717,998 ns   - #90
Report   LeetCode =    570,465 ns   - #60
Report    Sample4 =    229,209 ns   - #30
Report    Sample5 =     64,999 ns   - #1
Report    Sample7 =     95,790 ns   - #2
Report    Sample8 =    962,179 ns
Report   Sample15 =  1,020,763 ns
 */
public class MinimumCostRoadTest extends TestAutomation {

    @BeforeClass
    public static void beforeClass() {
        addImplementation(new MinimumCostRoadMy1270ms(), "My");         // 194 ms
        addImplementation(new MinimumCostRoadLeetCode3ms(), "LeetCode");   // 5 ms
        addImplementation(new MinimumCostRoadSample4ms(), "Sample4");    // 26 ms
        addImplementation(new MinimumCostRoadSample5ms(), "Sample5");    // 13 ms
        addImplementation(new MinimumCostRoadSample7ms(), "Sample7");    // 16 ms
        addImplementation(new MinimumCostRoadSample8ms(), "Sample8");    // 26 ms
        addImplementation(new MinimumCostRoadSample15ms(), "Sample15");   // 32 ms
    }

    @Test
    public void testCostRoad01() {
        runAllImplementations(test -> assertEquals(5, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{4, 5}, new int[][]{new int[]{1, 2, 3, 3, 2}, new int[]{3, 4, 4, 5, 1}})));
    }

    @Test
    public void testCostRoad02() {
        runAllImplementations(test -> assertEquals(7, ((MinimumCostRoad)test).solution(new int[]{3, 2}, new int[]{5, 7}, new int[][]{new int[]{3, 2, 3, 4, 4}, new int[]{3, 3, 5, 5, 5}, new int[]{3, 4, 5, 6, 6}})));
    }

    @Test
    public void testCostRoad03() { 
        runAllImplementations(test -> assertEquals(8, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{4, 6}, new int[][]{new int[]{3, 4, 2, 4, 1}, new int[]{2, 5, 4, 2, 5}, new int[]{3, 2, 1, 6, 3}})));
    }

    @Test
    public void testCostRoad04() { 
        runAllImplementations(test -> assertEquals(5, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{4, 6},
                new int[][]{new int[]{4, 3, 4, 3, 3}, new int[]{2, 4, 3, 4, 4}, new int[]{4, 6, 1, 3, 5}, new int[]{1, 5, 1, 2, 4}, new int[]{1, 2, 3, 4, 1}})));
    }

    @Test
    public void testCostRoad05() { 
        runAllImplementations(test -> assertEquals(8, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{4, 6},
                new int[][]{new int[]{1, 5, 3, 5, 5}, new int[]{3, 4, 1, 5, 4}, new int[]{3, 3, 2, 5, 5}, new int[]{1, 5, 3, 4, 5}})));
    }

    @Test
    public void testCostRoad06() { 
        runAllImplementations(test -> assertEquals(10, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{10, 8},
                new int[][]{new int[]{6, 4, 9, 7, 1}, new int[]{5, 2, 2, 1, 3}, new int[]{3, 2, 5, 5, 2}})));
    }

    @Test
    public void testCostRoad07() { 
        runAllImplementations(test -> assertEquals(12, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{10, 8},
                new int[][]{new int[]{1, 4, 9, 2, 2}, new int[]{9, 6, 9, 8, 3}, new int[]{1, 5, 6, 3, 5}, new int[]{10, 5, 5, 1, 1}})));
    }

    @Test
    public void testCostRoad08() { 
        runAllImplementations(test -> assertEquals(9, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{7, 8},
                new int[][]{new int[]{6, 5, 1, 6, 2}, new int[]{5, 4, 7, 6, 1}, new int[]{2, 4, 3, 1, 2}, new int[]{1, 5, 5, 4, 2}, new int[]{7, 7, 7, 5, 1}})));
    }

    @Test
    public void testCostRoad09() { 
        runAllImplementations(test -> assertEquals(11, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{8, 10},
                new int[][]{new int[]{6, 4, 7, 2, 4}, new int[]{2, 8, 8, 9, 4}, new int[]{1, 1, 2, 3, 1}, new int[]{8, 6, 1, 7, 2}, new int[]{1, 10, 8, 5, 1}})));
    }

    @Test
    public void testCostRoad10() { 
        runAllImplementations(test -> assertEquals(5, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{4, 5},
                new int[][]{new int[]{1, 2, 3, 3, 2}, new int[]{3, 4, 4, 5, 1}})));
    }

    @Test
    public void testCostRoad11() { 
        runAllImplementations(test -> assertEquals(5, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{4, 5},
                new int[][]{{1, 3, 3, 4, 1}, new int[]{3, 1, 1, 2, 5}, new int[]{2, 4, 3, 7, 2}, new int[]{3, 2, 3, 6, 1}, new int[]{1, 2, 3, 2, 1}})));
    }

    @Test
    public void testCostRoad12() { 
        runAllImplementations(test -> assertEquals(4, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{3, 7},
                new int[][]{{1, 3, 3, 4, 1}, new int[]{3, 1, 1, 2, 5}, new int[]{2, 4, 3, 7, 2}, new int[]{3, 2, 3, 6, 1}, new int[]{1, 2, 3, 2, 1}})));
    }

    @Test
    public void testCostRoad13() { 
        runAllImplementations(test -> assertEquals(26880, ((MinimumCostRoad)test).solution(new int[]{24556, 19664}, new int[]{40028, 63600},
                new int[][]{{38828, 26972, 29584, 37928, 4402}, new int[]{33756, 22055, 31073, 37149, 47007}, new int[]{37749, 34652, 26833, 20802, 16294}, new int[]{25540, 44250, 38439, 37835, 11416}, new int[]{24982, 43479, 32467, 49092, 96130}, new int[]{34952, 40456, 27981, 21219, 6056}, new int[]{37700, 26055, 27828, 44677, 12218}, new int[]{29190, 27558, 34831, 55589, 4044}, new int[]{38035, 61065, 27064, 46277, 17357}, new int[]{35003, 21018, 38616, 45047, 24302}, new int[]{36291, 21994, 27413, 34819, 20881}, new int[]{33310, 57695, 25317, 28231, 36464}, new int[]{34495, 36373, 26111, 48401, 30999}, new int[]{29162, 23071, 24858, 37392, 5702}, new int[]{39259, 44797, 35961, 53350, 3542}, new int[]{32389, 51626, 31282, 48459, 2276}, new int[]{28061, 43280, 36064, 55592, 1818}, new int[]{26773, 31980, 30032, 44782, 3042}, new int[]{28588, 60936, 31930, 43114, 5247}, new int[]{28911, 32065, 27725, 56500, 22855}, new int[]{29072, 53047, 27661, 57133, 5768}, new int[]{29319, 62708, 27007, 22096, 26722}, new int[]{27486, 20519, 34879, 63540, 17886}, new int[]{34047, 62415, 27646, 47999, 3253}, new int[]{33238, 44640, 39064, 50543, 3271}, new int[]{35279, 32438, 34767, 62042, 11577}, new int[]{33041, 55960, 33421, 44427, 51911}, new int[]{27306, 61515, 32140, 45072, 12986}, new int[]{36899, 27352, 31436, 63574, 17850}, new int[]{36461, 37435, 36431, 32931, 670}, new int[]{35161, 28104, 27223, 42991, 13224}})));
    }

    @Test
    public void testCostRoad14() { 
        runAllImplementations(test -> assertEquals(15919, ((MinimumCostRoad)test).solution(new int[]{39458, 4120}, new int[]{93045, 13661},
                new int[][]{{41274, 5148, 47685, 9020, 640}, new int[]{71335, 4560, 69822, 10512, 4263}, new int[]{82776, 11008, 91126, 7742, 3942}, new int[]{91186, 5917, 51374, 9966, 93314}, new int[]{55302, 8787, 55787, 4539, 83860}, new int[]{79833, 10447, 48712, 9012, 3588}, new int[]{48297, 7096, 89077, 10114, 2384}, new int[]{39541, 4216, 50643, 7329, 13546}, new int[]{77086, 10043, 51557, 7375, 2216}, new int[]{78031, 9534, 47744, 5712, 27726}, new int[]{84913, 13011, 55452, 13361, 16343}, new int[]{72786, 4746, 56509, 12050, 11948}, new int[]{46753, 8790, 46229, 6955, 720}, new int[]{64022, 6349, 76241, 7606, 1378}, new int[]{52835, 5502, 44233, 4126, 8092}, new int[]{58991, 12277, 86937, 10170, 5970}, new int[]{72212, 7566, 59752, 8033, 6787}, new int[]{54467, 9205, 83973, 6611, 97166}, new int[]{56629, 5589, 90182, 11856, 16021}, new int[]{50982, 6340, 69818, 10594, 9960}, new int[]{48789, 8668, 76954, 11151, 21429}, new int[]{80984, 13556, 69490, 9542, 10325}, new int[]{76906, 8946, 75987, 4503, 2270}, new int[]{79836, 6004, 86015, 4432, 27196}, new int[]{87100, 9499, 61967, 8892, 7191}, new int[]{43093, 5641, 79934, 7347, 20826}, new int[]{44346, 9169, 81721, 6394, 29215}, new int[]{53577, 5538, 41801, 5612, 8620}, new int[]{74080, 10995, 71820, 10528, 63628}})));
    }

    @Test
    public void testCostRoad15() { 
        runAllImplementations(test -> assertEquals(22751, ((MinimumCostRoad)test).solution(new int[]{20284, 20834}, new int[]{44383, 39709},
                new int[][]{{30680, 32539, 44141, 39411, 1295}, new int[]{24914, 35716, 36092, 39042, 49090}, new int[]{43342, 35592, 42882, 23386, 11861}, new int[]{28434, 34887, 38651, 23799, 19488}, new int[]{24454, 21215, 22539, 37714, 13380}, new int[]{28802, 37288, 24967, 22584, 12675}, new int[]{39022, 29355, 38436, 26874, 62872}, new int[]{33785, 29896, 38533, 32095, 621}, new int[]{21519, 27501, 24653, 24432, 3365}, new int[]{26984, 25621, 24359, 35181, 6911}, new int[]{37680, 35046, 29760, 32567, 19911}, new int[]{36835, 31164, 43729, 26240, 5337}, new int[]{31201, 37804, 24337, 32366, 8769}, new int[]{39127, 24687, 41139, 30838, 68197}, new int[]{38956, 27757, 42766, 37479, 2843}, new int[]{21952, 22943, 20752, 32362, 9065}, new int[]{25792, 26168, 36614, 28621, 5076}, new int[]{37796, 32153, 40119, 30812, 62331}, new int[]{40322, 30320, 34385, 31471, 462}, new int[]{29013, 25838, 23289, 31205, 88276}, new int[]{40123, 20882, 32447, 25622, 6524}, new int[]{25323, 28525, 30485, 32706, 7824}, new int[]{20553, 23000, 42493, 32190, 18249}, new int[]{34661, 21828, 38187, 35963, 11458}, new int[]{22708, 21280, 37414, 24803, 67183}, new int[]{44176, 28252, 27042, 26323, 73867}, new int[]{40421, 24090, 28440, 21227, 5841}, new int[]{36515, 22632, 31118, 31597, 8992}, new int[]{31883, 22783, 39437, 38759, 16473}, new int[]{36125, 26654, 31717, 22219, 23823}, new int[]{28882, 28734, 42154, 24206, 9205}, new int[]{40511, 28888, 24642, 23306, 19914}, new int[]{24065, 28451, 43219, 31330, 60403}, new int[]{24700, 23932, 39910, 23370, 15504}, new int[]{25199, 30614, 38782, 34605, 11302}, new int[]{37164, 27467, 32420, 38898, 98394}, new int[]{38497, 31819, 38556, 33475, 1321}, new int[]{40777, 36545, 34299, 21483, 8723}, new int[]{31486, 23618, 37075, 34849, 11007}})));
    }

    @Test
    public void testCostRoad16() { 
        runAllImplementations(test -> assertEquals(18791, ((MinimumCostRoad)test).solution(new int[]{60391, 5269}, new int[]{67763, 24971},
                new int[][]{{62034, 12903, 66447, 23088, 78130}, new int[]{64241, 12223, 62019, 12586, 59645}, new int[]{62424, 14177, 60636, 5869, 6808}, new int[]{67058, 10250, 60762, 5518, 26662}, new int[]{61955, 24371, 64054, 15394, 67978}, new int[]{65914, 15351, 66141, 8328, 4744}, new int[]{61527, 14857, 61209, 11356, 33765}, new int[]{66700, 22001, 65171, 11313, 9404}, new int[]{65214, 7100, 61217, 22761, 4567}, new int[]{67554, 9661, 64468, 19267, 12625}, new int[]{67448, 9334, 65387, 8008, 66754}, new int[]{62025, 11402, 60701, 24632, 63063}, new int[]{64702, 19223, 65721, 12827, 949}, new int[]{64294, 22821, 62488, 16604, 2407}, new int[]{60860, 12453, 65132, 14980, 6283}, new int[]{63619, 12247, 65809, 7297, 50881}, new int[]{63146, 21177, 65088, 6611, 9018}, new int[]{61149, 11270, 61239, 15740, 17351}, new int[]{65025, 10469, 61931, 9056, 83564}, new int[]{67381, 5706, 63717, 7356, 4819}, new int[]{63450, 14784, 66433, 18244, 97331}, new int[]{61582, 14654, 63280, 22675, 1436}})));
    }

    @Test
    public void testCostRoad17() { 
        runAllImplementations(test -> assertEquals(13799, ((MinimumCostRoad)test).solution(new int[]{3902, 30598}, new int[]{9504, 71004},
                new int[][]{{4068, 45734, 4535, 36080, 1535}, new int[]{7119, 58576, 9123, 37500, 11622}, new int[]{5025, 54336, 8664, 55784, 97086}, new int[]{4316, 45722, 8722, 66864, 19993}, new int[]{7639, 30991, 6952, 43925, 10377}, new int[]{9354, 37772, 5517, 57188, 19994}, new int[]{4113, 38608, 7094, 49369, 2650}, new int[]{9326, 67144, 9397, 62881, 3616}, new int[]{5884, 54053, 6303, 44380, 9428}, new int[]{8018, 33947, 5557, 59671, 5204}, new int[]{6802, 48674, 5493, 53263, 5303}, new int[]{6745, 38319, 7284, 41608, 14474}, new int[]{8193, 43108, 9491, 57622, 13696}, new int[]{8333, 69546, 8775, 58913, 7109}, new int[]{9194, 47181, 5348, 53044, 590}, new int[]{4083, 65221, 5319, 55218, 3353}, new int[]{4802, 43190, 5653, 66442, 23874}, new int[]{8471, 68873, 6766, 42706, 23809}, new int[]{6277, 42550, 8134, 43125, 22625}, new int[]{4472, 68793, 4140, 35004, 7546}, new int[]{5254, 56765, 8878, 53765, 6238}, new int[]{9377, 55878, 4780, 69635, 31864}, new int[]{8728, 37949, 9185, 70623, 922}, new int[]{8082, 34827, 7475, 66818, 21373}, new int[]{8564, 33444, 7356, 45683, 1217}, new int[]{6904, 53825, 8137, 51036, 2818}, new int[]{8133, 65528, 6383, 55513, 23677}, new int[]{4733, 39261, 5019, 32221, 19928}, new int[]{5235, 53466, 6416, 33630, 247}, new int[]{7311, 57005, 3966, 60339, 6178}, new int[]{4605, 43924, 4740, 30699, 63225}, new int[]{5244, 54601, 9443, 32508, 15619}, new int[]{7661, 37384, 5829, 31464, 3346}, new int[]{9201, 47448, 4668, 51950, 1680}, new int[]{8282, 31382, 5984, 66823, 25294}, new int[]{5357, 66885, 5006, 58747, 6465}, new int[]{7100, 51793, 5055, 66049, 1865}, new int[]{8512, 43442, 8256, 39721, 1954}, new int[]{7007, 46360, 8453, 39738, 398}, new int[]{8489, 35069, 6169, 36504, 2769}, new int[]{8279, 68696, 5578, 51074, 32918}, new int[]{9226, 69817, 9406, 39771, 23836}, new int[]{7301, 41645, 6302, 62229, 21222}, new int[]{6995, 48692, 4639, 66683, 15775}})));
    }

    @Test
    public void testCostRoad18() { 
        runAllImplementations(test -> assertEquals(17170, ((MinimumCostRoad)test).solution(new int[]{1250, 49100}, new int[]{5206, 68999},
                new int[][]{{5111, 61720, 4804, 51838, 11698}, new int[]{4919, 53468, 3511, 53522, 1433}, new int[]{3841, 52688, 2383, 63717, 82436}, new int[]{3740, 65795, 1381, 62185, 4366}, new int[]{4126, 51340, 3045, 66563, 32145}, new int[]{3451, 54923, 4571, 61979, 16994}, new int[]{2940, 57313, 4688, 61688, 3432}, new int[]{5117, 66014, 2221, 58500, 5124}, new int[]{1826, 61585, 3423, 50552, 150}, new int[]{4522, 67242, 4610, 63256, 38478}, new int[]{3491, 65620, 4310, 53145, 7319}, new int[]{1274, 53265, 1309, 54095, 340}, new int[]{1612, 57832, 2190, 57146, 1238}, new int[]{3353, 61583, 4911, 49248, 26203}, new int[]{4194, 60512, 4216, 61970, 219}, new int[]{3685, 53189, 4959, 65156, 11642}, new int[]{2796, 49321, 5166, 54456, 5154}, new int[]{3780, 51667, 4631, 68869, 14663}, new int[]{2278, 61080, 2105, 51284, 1607}, new int[]{2472, 67605, 3197, 68124, 35729}, new int[]{3041, 55686, 3003, 59675, 3710}, new int[]{2413, 65067, 4250, 62818, 2377}, new int[]{3046, 63042, 4910, 67386, 3325}, new int[]{4218, 67851, 2185, 59020, 10802}, new int[]{4264, 53143, 1739, 60413, 1104}, new int[]{3235, 62760, 2219, 59265, 9029}, new int[]{3898, 60302, 3033, 65336, 5173}, new int[]{3963, 63801, 5104, 58030, 3951}, new int[]{1953, 51229, 2756, 59682, 6484}, new int[]{2517, 55268, 4968, 63118, 8786}, new int[]{3621, 50664, 4677, 62983, 6690}, new int[]{1762, 58557, 1309, 63676, 2358}, new int[]{4905, 58288, 4592, 56648, 460}, new int[]{1884, 60434, 1982, 62572, 16157}, new int[]{3717, 56289, 4919, 63198, 7734}, new int[]{4945, 65848, 2948, 50237, 3353}})));
    }

    @Test
    public void testCostRoad19() { 
        runAllImplementations(test -> assertEquals(83913, ((MinimumCostRoad)test).solution(new int[]{7401, 12264}, new int[]{82466, 62273},
                new int[][]{{48649, 57845, 31821, 43786, 13142}, new int[]{45659, 51849, 45002, 12331, 34283}, new int[]{25449, 22193, 55470, 19523, 14202}, new int[]{47864, 20303, 59549, 48812, 22707}, new int[]{68687, 51179, 74252, 24464, 16899}, new int[]{76258, 56606, 23464, 31696, 71439}, new int[]{51189, 13054, 28063, 50980, 19039}, new int[]{71661, 52580, 11909, 45896, 80601}, new int[]{50945, 34033, 30184, 52787, 21913}, new int[]{65570, 49656, 13006, 44482, 51274}, new int[]{44679, 13928, 24638, 30737, 32164}, new int[]{24718, 59527, 30590, 49519, 2773}, new int[]{8504, 43503, 70353, 12792, 59656}, new int[]{68723, 57946, 24531, 17957, 40884}, new int[]{18230, 20958, 53931, 34270, 65438}, new int[]{48811, 16015, 15311, 13064, 52683}, new int[]{73071, 37852, 73856, 39368, 181}, new int[]{37155, 16545, 30647, 28909, 99977}, new int[]{40796, 38711, 25711, 44058, 24439}, new int[]{46440, 59305, 60740, 47543, 25392}, new int[]{20957, 23510, 53359, 27304, 2440}, new int[]{36087, 19265, 38040, 53324, 35569}, new int[]{30506, 27735, 73991, 20011, 9419}, new int[]{53005, 27910, 46480, 55677, 13129}, new int[]{43197, 58941, 60022, 14942, 42675}, new int[]{72077, 47989, 12064, 39909, 16439}, new int[]{54639, 19810, 77268, 16642, 17777}, new int[]{15185, 20235, 73908, 16532, 39776}, new int[]{74232, 22979, 50106, 56386, 3230}, new int[]{49809, 49259, 15730, 21893, 42908}, new int[]{58623, 30386, 27581, 43030, 12515}})));
    }

    @Test
    public void testCostRoad20() { 
        runAllImplementations(test -> assertEquals(62321, ((MinimumCostRoad)test).solution(new int[]{25324, 10067}, new int[]{80709, 62671},
                new int[][]{{71423, 40859, 33035, 33859, 66245}, new int[]{65646, 15357, 58777, 62374, 9220}, new int[]{27968, 28586, 29584, 35794, 7509}, new int[]{54106, 44261, 76061, 42706, 10917}, new int[]{53526, 39659, 32487, 53172, 3222}, new int[]{34160, 13208, 62124, 59690, 56799}, new int[]{80501, 24913, 31639, 23066, 30670}, new int[]{47702, 30817, 33179, 28407, 6541}, new int[]{64515, 18346, 62471, 28807, 83733}, new int[]{47463, 46931, 52681, 37179, 5908}, new int[]{32904, 47123, 35910, 26480, 20104}, new int[]{41918, 62571, 77406, 35670, 7046}, new int[]{40106, 52040, 72649, 37402, 33231}, new int[]{38788, 13110, 76120, 57126, 52585}, new int[]{34090, 55092, 67633, 12094, 25711}, new int[]{80705, 37960, 39837, 61822, 24257}, new int[]{47837, 20324, 47096, 61684, 14210}, new int[]{44744, 20995, 31455, 49111, 86568}, new int[]{67561, 29178, 64133, 13743, 10893}, new int[]{31765, 20776, 65520, 22003, 29966}, new int[]{71894, 47864, 32866, 37071, 15435}, new int[]{48826, 43669, 74623, 26181, 21418}, new int[]{47312, 31190, 59101, 37976, 65834}, new int[]{45042, 31293, 73684, 44354, 50084}, new int[]{31659, 22216, 45866, 37247, 21833}, new int[]{58776, 38563, 76894, 60193, 29466}, new int[]{73263, 18387, 49930, 10644, 3315}, new int[]{42321, 19796, 70797, 56487, 52766}, new int[]{79900, 49278, 70626, 34507, 11834}, new int[]{29946, 20894, 76394, 16080, 3952}, new int[]{40669, 46024, 40167, 43477, 30525}, new int[]{31924, 48639, 40213, 12282, 17181}, new int[]{56420, 14615, 49761, 53045, 2001}, new int[]{74220, 62654, 61805, 56592, 41747}, new int[]{42635, 39667, 45961, 57160, 7225}, new int[]{79379, 39102, 39595, 31284, 5425}, new int[]{54008, 19343, 42637, 30330, 60989}, new int[]{30007, 41547, 38830, 50858, 5535}, new int[]{46089, 19283, 37182, 33403, 50118}, new int[]{72064, 52977, 77164, 10718, 26273}, new int[]{52398, 55249, 40763, 39122, 34194}, new int[]{71165, 42487, 40175, 40807, 47766}, new int[]{55471, 18942, 32294, 34953, 1479}, new int[]{25595, 30021, 71683, 32220, 19161}, new int[]{34315, 40731, 75132, 24062, 68875}, new int[]{77208, 32082, 79614, 11661, 24302}, new int[]{67755, 38329, 72160, 42098, 6089}, new int[]{48145, 27395, 73242, 47751, 15797}, new int[]{59875, 52149, 64653, 58010, 6333}, new int[]{36078, 55319, 29885, 22614, 10744}, new int[]{58860, 20786, 54765, 48276, 43557}, new int[]{37912, 44768, 52092, 46658, 7573}, new int[]{66251, 29989, 32973, 55186, 52451}, new int[]{30950, 32266, 56585, 24739, 61053}, new int[]{66895, 31623, 75056, 21214, 12258}, new int[]{25780, 21181, 49653, 40052, 49432}, new int[]{59975, 41967, 79269, 34433, 9129}, new int[]{47938, 39911, 67071, 28614, 19044}, new int[]{29832, 55793, 72372, 45333, 52616}, new int[]{51698, 48220, 34501, 30230, 32736}, new int[]{63152, 28291, 33070, 59729, 3620}, new int[]{62027, 26577, 78566, 24976, 5218}, new int[]{34913, 18490, 57292, 10094, 38952}, new int[]{67261, 21877, 32805, 58955, 58948}, new int[]{63668, 32544, 45049, 28808, 2896}, new int[]{45776, 59232, 80049, 61944, 32288}, new int[]{38630, 44788, 46768, 37218, 32190}, new int[]{54059, 24527, 29129, 19957, 13873}, new int[]{37236, 61246, 50791, 39991, 27188}, new int[]{59048, 16234, 51100, 30956, 19553}, new int[]{37072, 46959, 45481, 10310, 64150}, new int[]{29842, 12980, 31419, 27201, 13038}, new int[]{79617, 26399, 37673, 60194, 7286}, new int[]{31503, 53652, 47800, 10968, 34913}, new int[]{43917, 14772, 52845, 16659, 1423}, new int[]{67120, 12316, 62400, 52036, 89694}, new int[]{30524, 47987, 48444, 42749, 47334}, new int[]{61989, 20682, 48473, 12091, 9832}, new int[]{78222, 14013, 64242, 36293, 28127}, new int[]{43071, 35107, 49019, 60815, 16152}, new int[]{50794, 50243, 70934, 18516, 2165}, new int[]{78621, 18948, 31226, 42791, 68356}, new int[]{49506, 47297, 77283, 50438, 21116}, new int[]{31095, 50464, 75975, 24130, 6800}, new int[]{63649, 57077, 53675, 17681, 36564}, new int[]{78327, 18372, 56884, 25049, 20234}, new int[]{64674, 16965, 66314, 57667, 64664}})));
    }

    @Test
    public void testCostRoad21() { 
        runAllImplementations(test -> assertEquals(18802, ((MinimumCostRoad)test).solution(new int[]{10500, 35323}, new int[]{13772, 95889},
                new int[][]{{11268, 70163, 13275, 94188, 92023}, new int[]{12646, 44882, 13237, 66299, 1536}, new int[]{12371, 53702, 12854, 45705, 77982}, new int[]{11932, 46677, 10572, 49817, 4270}, new int[]{11680, 72485, 12945, 92429, 3855}, new int[]{12594, 70032, 10759, 66335, 2596}, new int[]{12074, 36632, 12993, 87975, 25463}, new int[]{11807, 42558, 12063, 64727, 21627}, new int[]{13408, 61414, 11062, 93131, 69421}, new int[]{11361, 62871, 12697, 40333, 8249}, new int[]{13140, 69686, 12841, 36282, 78626}, new int[]{11114, 39292, 13251, 46917, 98604}, new int[]{12365, 82219, 11945, 56370, 3417}, new int[]{13634, 95465, 11935, 86227, 1528}, new int[]{13113, 53099, 11460, 71513, 7057}, new int[]{12234, 55104, 12711, 38321, 90355}, new int[]{11042, 40275, 10746, 80129, 38821}, new int[]{11664, 82179, 12909, 72554, 5031}, new int[]{11542, 40306, 12225, 79484, 1515}, new int[]{11863, 83509, 12341, 87792, 2039}, new int[]{13604, 79412, 11512, 68441, 8811}, new int[]{12934, 41892, 10859, 48431, 2952}, new int[]{11706, 80760, 12613, 45064, 36873}, new int[]{12547, 48340, 12472, 76492, 8118}, new int[]{12529, 77254, 13504, 64837, 2752}, new int[]{10673, 48722, 12558, 68309, 4010}, new int[]{13168, 52202, 11360, 72053, 14235}, new int[]{10573, 80431, 10862, 73709, 2567}, new int[]{12354, 48092, 10801, 94524, 14403}, new int[]{13087, 91081, 13302, 63300, 21640}, new int[]{11497, 84789, 11562, 93606, 736}, new int[]{11837, 46335, 13213, 53612, 5523}, new int[]{13006, 53023, 13002, 56926, 76973}, new int[]{10964, 58164, 10914, 95848, 89751}, new int[]{11946, 53921, 12632, 38368, 11539}, new int[]{11926, 43882, 11173, 70414, 72082}, new int[]{10925, 82361, 13735, 43600, 77166}, new int[]{12206, 84974, 12581, 40983, 69403}, new int[]{12728, 92645, 13145, 90207, 61507}, new int[]{13051, 81518, 13049, 78709, 1086}, new int[]{11055, 62823, 11357, 61115, 1203}, new int[]{11479, 76890, 13369, 49861, 22786}, new int[]{13409, 54157, 10961, 62056, 44915}, new int[]{10881, 60911, 13695, 71319, 5982}, new int[]{13211, 63354, 12357, 39559, 18520}, new int[]{13593, 81052, 10560, 55284, 976}, new int[]{13431, 90264, 12904, 66536, 37235}, new int[]{10704, 77783, 12861, 64970, 12198}, new int[]{11618, 56015, 11999, 81307, 11165}, new int[]{11446, 67569, 11786, 75621, 451}, new int[]{11651, 36018, 11547, 60855, 5044}, new int[]{11350, 87689, 12050, 56395, 24604}, new int[]{11108, 52516, 10923, 52343, 179}, new int[]{12998, 73419, 10754, 69615, 1307}, new int[]{10516, 37290, 11802, 56405, 11118}, new int[]{13693, 95744, 13395, 69637, 724}, new int[]{10895, 62050, 10877, 36302, 1167}, new int[]{12341, 72755, 10586, 76052, 2843}, new int[]{12352, 65338, 12636, 53799, 24694}, new int[]{12906, 58467, 11479, 95117, 17186}, new int[]{12259, 82482, 13569, 68080, 30110}, new int[]{13533, 63902, 10915, 35401, 18821}, new int[]{13300, 42459, 12143, 61320, 13183}, new int[]{11664, 88622, 12304, 60374, 20722}, new int[]{12133, 87449, 12091, 71004, 12251}, new int[]{12363, 54287, 13509, 92459, 32116}, new int[]{10982, 82074, 11442, 64195, 14051}, new int[]{11692, 86574, 12963, 81901, 3758}, new int[]{13454, 86522, 13447, 51635, 61011}, new int[]{12220, 53067, 10540, 37229, 10569}, new int[]{13540, 69125, 10533, 71237, 81259}, new int[]{10755, 38564, 11434, 82267, 14635}, new int[]{13179, 69116, 13664, 63645, 67875}})));
    }

    @Test
    public void testCostRoad22() { 
        runAllImplementations(test -> assertEquals(18430, ((MinimumCostRoad)test).solution(new int[]{25474, 6807}, new int[]{79990, 8721},
                new int[][]{{74424, 7597, 67411, 8117, 3136}, new int[]{46064, 7220, 60104, 7608, 972}, new int[]{33205, 7150, 30376, 8154, 3486}, new int[]{44572, 7790, 36216, 8659, 4435}, new int[]{62918, 7094, 55522, 8343, 7739}, new int[]{53433, 8472, 37182, 7182, 82087}, new int[]{31376, 8627, 29299, 7991, 685}, new int[]{49348, 7413, 73130, 8592, 17125}, new int[]{48717, 8215, 27956, 7087, 7385}, new int[]{38429, 6954, 40336, 8520, 2489}, new int[]{37802, 8213, 73097, 7979, 27130}, new int[]{39268, 6880, 55116, 7921, 386}, new int[]{39776, 8201, 58436, 7117, 14949}, new int[]{33684, 6817, 53957, 8120, 5973}, new int[]{36715, 7531, 66803, 7722, 8950}, new int[]{64405, 7204, 74454, 7764, 2059}, new int[]{43369, 8710, 77409, 7935, 2330}, new int[]{69502, 8600, 32952, 7593, 1136}, new int[]{76666, 7768, 50545, 8589, 6349}, new int[]{31742, 7687, 55294, 7078, 5371}, new int[]{60850, 7554, 33170, 6951, 80246}, new int[]{39111, 7274, 45805, 8346, 275}, new int[]{69125, 7301, 31880, 7662, 30917}, new int[]{56928, 7299, 71068, 8250, 5758}, new int[]{37661, 7070, 40892, 7979, 2851}, new int[]{54680, 7023, 61464, 8294, 4291}, new int[]{58580, 7494, 63156, 8591, 1915}, new int[]{67181, 7027, 57596, 7256, 6258}, new int[]{60841, 7190, 53466, 7344, 2791}, new int[]{30685, 7016, 52496, 8390, 12865}, new int[]{68609, 7965, 37663, 7088, 10586}, new int[]{64755, 8203, 77992, 7465, 465}, new int[]{77961, 8331, 44375, 6887, 34383}, new int[]{39213, 7935, 36364, 6863, 450}, new int[]{72542, 7240, 68599, 7873, 57153}, new int[]{28620, 7850, 64459, 8123, 11136}, new int[]{65946, 8570, 58695, 7236, 82273}, new int[]{79972, 7478, 37365, 8579, 5187}, new int[]{48540, 6910, 41989, 7503, 6347}, new int[]{27621, 7691, 58613, 7129, 7380}, new int[]{41229, 6894, 66240, 7305, 16609}, new int[]{43994, 7132, 27156, 7938, 11555}, new int[]{69017, 8213, 48685, 8252, 17310}, new int[]{71590, 7538, 29153, 7575, 39978}, new int[]{41908, 7713, 36640, 8008, 4918}, new int[]{72318, 7246, 74047, 7590, 1249}, new int[]{66831, 8238, 70061, 8067, 2120}, new int[]{36229, 7000, 75144, 7361, 30444}, new int[]{26850, 7208, 44439, 7856, 84195}, new int[]{63479, 7131, 42028, 8682, 21903}, new int[]{72985, 8569, 53458, 8571, 4050}, new int[]{41222, 7968, 31019, 8604, 10152}, new int[]{61239, 8248, 64192, 8394, 1262}, new int[]{34324, 7984, 27437, 8394, 322}, new int[]{28452, 8264, 43857, 8659, 12440}, new int[]{44195, 7660, 53669, 8221, 2747}, new int[]{37302, 7992, 30056, 7646, 7103}, new int[]{62931, 8303, 27403, 7411, 17272}, new int[]{60032, 7824, 74152, 6959, 55978}, new int[]{46249, 7926, 52582, 7697, 3509}, new int[]{67922, 7447, 54553, 8498, 11331}, new int[]{58842, 8478, 37041, 8324, 5227}, new int[]{53764, 8652, 58655, 7424, 4930}, new int[]{39490, 7393, 34300, 7981, 1742}, new int[]{69822, 7562, 65893, 7295, 951}})));
    }

    @Test
    public void testCostRoad23() { 
        runAllImplementations(test -> assertEquals(3867, ((MinimumCostRoad)test).solution(new int[]{22999, 20026}, new int[]{33947, 24064},
                new int[][]{{31931, 23674, 27055, 23783, 4323}, new int[]{31469, 22007, 33629, 23058, 587}, new int[]{27986, 23517, 25418, 21515, 2949}, new int[]{31936, 20876, 24055, 20479, 5614}, new int[]{23101, 20906, 24202, 21908, 387}, new int[]{29580, 20363, 33498, 23348, 4709}, new int[]{26259, 23831, 26501, 23979, 250}, new int[]{29942, 20916, 28519, 21561, 699}, new int[]{24741, 20033, 26616, 21312, 134}, new int[]{23288, 20572, 33737, 21825, 583}, new int[]{25337, 23859, 29065, 22086, 3017}, new int[]{27712, 22205, 30842, 20756, 3805}, new int[]{32615, 23940, 32705, 20055, 2489}, new int[]{33845, 23922, 28558, 23060, 1901}, new int[]{27671, 23250, 30481, 20693, 76324}, new int[]{33328, 23450, 33331, 23067, 328}, new int[]{33841, 21402, 28941, 23029, 4978}, new int[]{23339, 22798, 30791, 22643, 6961}, new int[]{24513, 21084, 24968, 22445, 414}, new int[]{33717, 22370, 33600, 22852, 29527}, new int[]{33454, 24000, 23609, 22214, 76130}, new int[]{26227, 21817, 26783, 23150, 949}, new int[]{33576, 22298, 30037, 20171, 4899}, new int[]{28932, 23622, 23662, 21682, 5154}, new int[]{28381, 21359, 32093, 21944, 2394}, new int[]{29061, 20561, 28134, 22768, 67495}, new int[]{24970, 21592, 27074, 21893, 1101}, new int[]{28232, 22539, 31992, 22306, 1231}, new int[]{23182, 23553, 30114, 20657, 2107}, new int[]{30092, 20139, 29192, 21552, 539}, new int[]{28017, 21439, 28447, 21625, 65}, new int[]{23191, 24040, 31029, 22540, 7575}, new int[]{27696, 23680, 30365, 24030, 72}, new int[]{25098, 20907, 26790, 21630, 311}, new int[]{31781, 20624, 26327, 21348, 5301}, new int[]{30334, 21287, 26756, 23379, 5623}, new int[]{33591, 23205, 29162, 22022, 2907}, new int[]{28254, 21485, 24749, 23670, 2655}, new int[]{27227, 21311, 28631, 20557, 2052}, new int[]{31597, 20485, 32279, 21355, 215}, new int[]{24385, 23594, 31691, 21735, 77899}, new int[]{32456, 20705, 25559, 23303, 2943}, new int[]{28384, 21673, 27286, 21384, 45025}, new int[]{27064, 22835, 29809, 22620, 420}, new int[]{31634, 21141, 28183, 23940, 5469}, new int[]{32814, 22646, 24718, 22860, 6792}, new int[]{25645, 21323, 24239, 23508, 62347}, new int[]{25050, 22893, 25036, 20940, 53}, new int[]{25354, 21564, 27073, 24046, 4073}, new int[]{23046, 22812, 23733, 21623, 162}, new int[]{31948, 22058, 26896, 23696, 3173}, new int[]{25569, 23452, 33707, 23744, 2086}, new int[]{30148, 22258, 31581, 20874, 1625}, new int[]{32381, 23546, 33492, 20332, 18220}, new int[]{26835, 22290, 32221, 21494, 3681}, new int[]{30293, 21690, 31379, 23459, 72054}, new int[]{27066, 20612, 27353, 23562, 2565}, new int[]{30098, 23508, 32677, 22799, 2699}, new int[]{28938, 22056, 29049, 22477, 22019}, new int[]{30130, 21633, 29449, 22129, 888}, new int[]{27142, 20629, 24615, 22477, 898}, new int[]{24629, 23582, 29615, 23311, 84129}, new int[]{30014, 22522, 27226, 20354, 61575}, new int[]{33686, 20093, 23802, 23226, 4313}, new int[]{24776, 22996, 33503, 20893, 6674}})));
    }

    @Test
    public void testCostRoad24() { 
        runAllImplementations(test -> assertEquals(25732, ((MinimumCostRoad)test).solution(new int[]{26320, 24763}, new int[]{80233, 31748},
                new int[][]{{70908, 31344, 41931, 30747, 27798}, new int[]{55145, 27981, 48982, 31207, 6412}, new int[]{28155, 28040, 47443, 31143, 2705}, new int[]{57190, 25344, 48031, 26735, 84006}, new int[]{67529, 24863, 69608, 26970, 3904}, new int[]{39375, 25479, 61734, 29007, 13476}, new int[]{53730, 28114, 33410, 31372, 48640}, new int[]{73045, 29136, 78737, 25224, 7384}, new int[]{31172, 26647, 39661, 28683, 7557}, new int[]{50158, 24823, 49577, 26284, 1900}, new int[]{38261, 26787, 79342, 26509, 64843}, new int[]{37083, 31486, 43641, 30935, 4098}, new int[]{79144, 30288, 59288, 29923, 8134}, new int[]{67159, 28598, 56017, 25030, 14114}, new int[]{30784, 31296, 52715, 25169, 7902}, new int[]{43908, 28315, 49580, 30062, 6516}, new int[]{73142, 28276, 56197, 26740, 10874}, new int[]{52316, 27219, 32561, 26159, 17034}, new int[]{33166, 29334, 45117, 26537, 14669}, new int[]{68224, 27870, 50496, 31199, 9516}, new int[]{40239, 28044, 42069, 31018, 3384}, new int[]{50177, 26353, 43415, 28123, 2534}, new int[]{75899, 27645, 62201, 26217, 4429}, new int[]{77590, 27133, 56754, 25409, 8137}, new int[]{47992, 30924, 62553, 29217, 15060}, new int[]{73575, 28814, 56090, 28623, 2064}, new int[]{54841, 28984, 73561, 28286, 64689}, new int[]{65984, 29755, 71046, 26222, 1282}, new int[]{57180, 25737, 35597, 30112, 11465}, new int[]{65440, 29593, 37465, 27486, 10909}, new int[]{46813, 30363, 72676, 29813, 24614}, new int[]{49659, 27883, 28690, 27962, 8387}, new int[]{51454, 31211, 36684, 30421, 8015}, new int[]{60389, 31390, 47514, 26129, 16120}, new int[]{51009, 30582, 59487, 28380, 3561}, new int[]{63462, 26966, 67050, 31184, 6581}, new int[]{58120, 26635, 77387, 26097, 13487}, new int[]{49783, 28612, 33266, 29302, 16222}, new int[]{69176, 30435, 46779, 25178, 668}, new int[]{27544, 31271, 73229, 27802, 20045}, new int[]{41463, 30548, 41516, 27817, 1000}, new int[]{30952, 29040, 69934, 28617, 33044}, new int[]{44145, 26428, 80006, 28558, 14785}, new int[]{57180, 25545, 32039, 29030, 23156}, new int[]{75544, 28153, 79638, 25239, 4662}, new int[]{56974, 30035, 58363, 25015, 321}, new int[]{31374, 29258, 57531, 29392, 5151}, new int[]{40316, 27823, 42546, 30054, 14105}, new int[]{36964, 30466, 78258, 27618, 15825}, new int[]{48978, 24915, 55144, 26328, 4301}, new int[]{54986, 27299, 59204, 26722, 3410}, new int[]{38581, 25022, 65487, 29685, 21647}, new int[]{41304, 28415, 26340, 29690, 2464}, new int[]{67785, 25141, 52119, 29930, 14233}, new int[]{38931, 26075, 66350, 28698, 15172}, new int[]{52031, 25196, 77222, 31054, 6374}, new int[]{41564, 27028, 75876, 31433, 4831}, new int[]{59255, 27963, 69105, 24763, 52599}, new int[]{56787, 26364, 71080, 26936, 52002}, new int[]{65500, 28826, 73200, 27751, 1147}, new int[]{34646, 31051, 33633, 27625, 2707}, new int[]{73612, 30760, 49606, 28840, 17740}, new int[]{42045, 26380, 29535, 27786, 7399}, new int[]{34977, 28380, 78852, 27751, 49615}, new int[]{33995, 30329, 46340, 29247, 4361}, new int[]{74042, 25127, 68985, 25330, 286}, new int[]{29718, 25429, 72004, 28293, 43752}, new int[]{67235, 24918, 36477, 27433, 73958}, new int[]{58189, 26342, 74898, 25898, 14148}, new int[]{77734, 29894, 69214, 26727, 57717}, new int[]{34384, 28853, 49269, 27451, 5616}, new int[]{29120, 24774, 29485, 28601, 3242}, new int[]{39697, 30109, 53951, 28625, 10611}, new int[]{60847, 29287, 65455, 24890, 1513}, new int[]{76556, 29529, 27592, 31716, 31216}, new int[]{47759, 31547, 29944, 30936, 22485}})));
    }

    @Test
    public void testCostRoad25() { 
        runAllImplementations(test -> assertEquals(17359, ((MinimumCostRoad)test).solution(new int[]{19991, 10620}, new int[]{27940, 99463},
                new int[][]{{20803, 77472, 21193, 44854, 8553}, new int[]{27153, 98254, 25784, 89899, 6547}, new int[]{25561, 43935, 20096, 67125, 16472}, new int[]{24410, 58805, 25220, 43523, 73655}, new int[]{23627, 57472, 22290, 34327, 19968}, new int[]{21949, 23023, 21089, 73094, 25991}, new int[]{20371, 70015, 22468, 85287, 2881}, new int[]{27397, 97423, 24940, 87760, 10466}, new int[]{23168, 40164, 24838, 89897, 25522}, new int[]{25583, 61296, 20664, 99034, 16504}, new int[]{23316, 65897, 23194, 14434, 2512}, new int[]{22805, 58482, 24828, 23665, 13804}, new int[]{27724, 17609, 20859, 97649, 17690}, new int[]{22493, 46934, 23544, 27155, 9873}, new int[]{26395, 88167, 20400, 96784, 9335}, new int[]{24744, 94791, 24363, 94255, 156}, new int[]{26151, 44153, 23421, 42379, 2251}, new int[]{22389, 27835, 21177, 42272, 69213}, new int[]{21620, 13624, 27528, 19129, 7855}, new int[]{27727, 19282, 24458, 23278, 26985}, new int[]{20864, 54298, 20199, 68744, 25113}, new int[]{20862, 91868, 20524, 16936, 27106}, new int[]{23244, 17308, 24143, 60890, 76562}, new int[]{24831, 54389, 22135, 34714, 18504}, new int[]{23293, 16360, 26176, 98510, 70403}, new int[]{27381, 15068, 22640, 68451, 36785}, new int[]{26878, 68692, 22177, 25901, 12395}, new int[]{21097, 83079, 25419, 98145, 17858}, new int[]{24676, 19766, 26860, 98303, 1288}, new int[]{20600, 25386, 21808, 69723, 36296}, new int[]{25426, 26530, 27604, 78451, 42746}, new int[]{21600, 93102, 20704, 52025, 28115}, new int[]{24156, 31063, 25991, 63820, 22338}, new int[]{21448, 70865, 21622, 69780, 964}, new int[]{24225, 56733, 25210, 98237, 42215}, new int[]{25283, 45853, 23941, 46844, 3881}, new int[]{22077, 74665, 23571, 87385, 1933}, new int[]{22801, 15373, 27928, 86362, 10781}, new int[]{24253, 17100, 22226, 52485, 34078}, new int[]{25096, 42079, 21889, 16899, 9564}, new int[]{21510, 51773, 20928, 22048, 23023}, new int[]{21317, 97949, 23618, 55882, 29064}, new int[]{20424, 17030, 23820, 93325, 13113}, new int[]{27803, 33082, 25048, 14146, 61920}, new int[]{25262, 38027, 27160, 34739, 3761}, new int[]{25418, 32363, 24381, 27885, 54715}, new int[]{22253, 29784, 26347, 25363, 3266}, new int[]{20393, 24844, 23515, 32891, 14976}, new int[]{25803, 76648, 20517, 50651, 1810}, new int[]{23164, 12268, 23941, 43276, 25252}, new int[]{20536, 37910, 27152, 24789, 47170}, new int[]{24044, 60913, 26188, 16309, 3734}, new int[]{22763, 98715, 20244, 38127, 40636}, new int[]{23001, 69270, 26583, 47204, 19903}, new int[]{21045, 37982, 27568, 47143, 8532}, new int[]{27787, 20582, 21222, 80169, 45430}, new int[]{22775, 91332, 26262, 80217, 97400}, new int[]{22812, 73146, 20234, 85925, 10695}, new int[]{20423, 91495, 27678, 70697, 7403}, new int[]{25413, 72714, 21856, 58481, 7869}, new int[]{21406, 67552, 27368, 44558, 6686}, new int[]{27205, 68760, 23924, 28224, 14804}, new int[]{27915, 65481, 26512, 51468, 3561}, new int[]{23587, 80513, 24753, 91928, 9384}, new int[]{21364, 56922, 20176, 45875, 15169}, new int[]{27485, 21339, 26070, 58937, 98865}, new int[]{22698, 82371, 20366, 21689, 16648}, new int[]{23667, 54614, 21569, 37311, 5523}, new int[]{22053, 50553, 25828, 19818, 31491}, new int[]{26351, 84023, 26499, 22638, 35186}, new int[]{21813, 98601, 20905, 95305, 325}, new int[]{27180, 11863, 26517, 40225, 35377}, new int[]{24135, 40799, 26495, 27092, 2242}, new int[]{26578, 68840, 25876, 26722, 28020}, new int[]{27908, 97053, 24684, 73067, 23198}, new int[]{26606, 67910, 27581, 74952, 5149}, new int[]{25267, 41669, 24125, 69557, 20210}, new int[]{21428, 42180, 25246, 89083, 32184}, new int[]{23330, 50262, 21219, 97837, 34657}, new int[]{25914, 82679, 25316, 12694, 4657}, new int[]{26927, 61713, 20069, 48165, 19834}, new int[]{25568, 80829, 21824, 76283, 1158}, new int[]{26255, 27523, 25196, 90095, 98387}, new int[]{22411, 69425, 26505, 50725, 70495}, new int[]{21932, 84729, 25310, 52393, 27319}, new int[]{26140, 35347, 26532, 52433, 24569}, new int[]{27307, 11922, 27637, 82911, 86181}, new int[]{24255, 28973, 26154, 71240, 21290}, new int[]{21901, 19867, 25612, 79187, 32830}, new int[]{27910, 83269, 26764, 93071, 9045}})));
    }

    @Test
    public void testCostRoad26() { 
        runAllImplementations(test -> assertEquals(5228, ((MinimumCostRoad)test).solution(new int[]{21715, 8665}, new int[]{23175, 23401},
                new int[][]{{21798, 12959, 22820, 21861, 4647}, new int[]{21850, 14957, 22309, 19252, 2160}, new int[]{22801, 10947, 22938, 17462, 4969}, new int[]{23113, 22363, 22910, 21202, 1132}, new int[]{23162, 15314, 22473, 11113, 4047}, new int[]{23036, 21536, 22140, 9303, 5013}, new int[]{22943, 13177, 21929, 12215, 1821}, new int[]{22452, 9514, 22080, 22727, 2316}, new int[]{22214, 16925, 22680, 11521, 191}, new int[]{21781, 9200, 22654, 14049, 4018}, new int[]{22801, 16685, 22152, 20913, 40648}, new int[]{21886, 12745, 22173, 15099, 644}, new int[]{21931, 14034, 23050, 19561, 5663}, new int[]{22180, 9236, 22084, 19901, 4514}, new int[]{22192, 17784, 21835, 10913, 4122}, new int[]{23135, 19889, 22915, 9769, 4274}, new int[]{22204, 22888, 23028, 10442, 11335}, new int[]{21796, 20974, 22391, 10363, 10615}, new int[]{22264, 8728, 22399, 9101, 65}, new int[]{22519, 20541, 22463, 18436, 382}, new int[]{22863, 8701, 23097, 18270, 4277}, new int[]{22947, 22714, 22758, 12144, 6162}, new int[]{22415, 20678, 22247, 19404, 19842}, new int[]{21757, 20453, 22505, 20554, 209}, new int[]{21799, 10090, 22132, 21707, 1798}, new int[]{23159, 15457, 23102, 15550, 38}, new int[]{22557, 20013, 22039, 10390, 47869}, new int[]{23091, 16191, 22266, 23108, 7701}, new int[]{22459, 17879, 22557, 23317, 2218}, new int[]{22990, 14411, 22127, 10302, 3854}, new int[]{21973, 16018, 22501, 12277, 694}, new int[]{22780, 16590, 22876, 18849, 1064}, new int[]{22481, 17489, 21752, 14184, 1585}, new int[]{22435, 21197, 21720, 12411, 29717}, new int[]{21833, 21763, 22736, 14104, 48878}, new int[]{21879, 23072, 22326, 18599, 79476}, new int[]{21936, 22243, 22166, 9675, 90786}, new int[]{21785, 15431, 22742, 15624, 89197}, new int[]{22368, 18511, 22811, 14285, 9199}, new int[]{23010, 21773, 22516, 11295, 580}, new int[]{22378, 9808, 21999, 19402, 2778}, new int[]{21870, 22501, 22190, 12999, 18967}, new int[]{22180, 21877, 22589, 16455, 71641}, new int[]{22089, 17423, 22875, 19482, 939}, new int[]{22552, 19297, 22075, 21185, 2014}, new int[]{21837, 10396, 22195, 11965, 768}, new int[]{22690, 17775, 22518, 10268, 914}, new int[]{22952, 20862, 22441, 21925, 681}, new int[]{22184, 15869, 22813, 22861, 2001}, new int[]{22221, 12512, 23081, 20902, 48111}, new int[]{22425, 15645, 22914, 19472, 31752}, new int[]{22681, 8938, 22146, 15683, 2435}, new int[]{22824, 16374, 22067, 18173, 21920}, new int[]{21788, 18221, 22299, 8840, 6218}, new int[]{23131, 14699, 22085, 8945, 1199}, new int[]{22683, 19980, 22083, 16271, 3489}, new int[]{21907, 22249, 22558, 13331, 6108}, new int[]{22913, 19079, 22773, 20759, 1564}, new int[]{23001, 20458, 21838, 13022, 5780}, new int[]{22462, 18260, 22544, 18563, 63}})));
    }

    @Test
    public void testCostRoad27() { 
        runAllImplementations(test -> assertEquals(18125, ((MinimumCostRoad)test).solution(new int[]{570, 3481}, new int[]{15144, 45453},
                new int[][]{{13055, 35719, 13632, 31249, 3078}, new int[]{4025, 21577, 10450, 11231, 1672}, new int[]{6716, 27894, 5614, 4197, 20113}, new int[]{3115, 29844, 9876, 14304, 12106}, new int[]{6427, 18978, 9081, 17952, 2161}, new int[]{7965, 41917, 10674, 33192, 29305}, new int[]{7049, 6204, 12650, 42547, 4613}, new int[]{5912, 24630, 4373, 10980, 53309}, new int[]{12570, 19045, 4428, 17669, 10389}, new int[]{5100, 34705, 15125, 41717, 3116}, new int[]{9057, 24909, 4134, 40943, 5643}, new int[]{13031, 15474, 2150, 8007, 16892}, new int[]{2408, 32280, 1091, 22248, 7241}, new int[]{2858, 13614, 6199, 18024, 7735}, new int[]{4860, 10502, 9246, 31324, 9615}, new int[]{6222, 39522, 8553, 27270, 2187}, new int[]{11033, 15041, 13140, 4232, 11011}, new int[]{3226, 34975, 14702, 21285, 2325}, new int[]{13369, 39726, 2632, 44250, 11069}, new int[]{14021, 45178, 5141, 4206, 16547}, new int[]{8475, 5776, 8958, 39113, 28244}, new int[]{2138, 28728, 8087, 6091, 14003}, new int[]{11737, 33202, 8873, 27276, 11685}, new int[]{5041, 29556, 5691, 14546, 2372}, new int[]{7799, 39245, 6345, 28061, 89459}, new int[]{1793, 44867, 9590, 5966, 27799}, new int[]{6027, 26988, 939, 24132, 28767}, new int[]{9209, 4989, 6086, 19251, 97581}, new int[]{12773, 19215, 1009, 13139, 50763}, new int[]{13578, 20475, 11396, 10624, 1868}, new int[]{6169, 18881, 1049, 30456, 3474}, new int[]{4455, 19485, 923, 36611, 13631}, new int[]{4655, 25704, 15102, 41815, 23141}, new int[]{13653, 24760, 753, 44938, 14311}, new int[]{4062, 39437, 14514, 12310, 4552}, new int[]{4554, 7141, 10004, 36026, 24393}, new int[]{2991, 38066, 4194, 9131, 29555}, new int[]{3522, 11198, 6226, 31659, 20533}, new int[]{8457, 33072, 7233, 33093, 1224}, new int[]{14562, 10137, 8166, 33413, 21948}, new int[]{3141, 22575, 15033, 31159, 13742}, new int[]{5085, 39641, 8264, 19032, 21999}, new int[]{10426, 38235, 1580, 23958, 17508}, new int[]{14174, 18531, 11684, 30708, 13041}, new int[]{3654, 3741, 7346, 9295, 3182}, new int[]{9111, 26077, 4367, 39474, 97735}, new int[]{12105, 20035, 7785, 10203, 4029}, new int[]{2145, 28834, 10670, 18956, 58561}, new int[]{9213, 39472, 725, 22583, 19923}, new int[]{14216, 17774, 9174, 19361, 45}, new int[]{6803, 13472, 1414, 11988, 14081}, new int[]{13945, 15680, 6000, 41988, 4876}, new int[]{5876, 22264, 13610, 8525, 15537}, new int[]{10554, 22006, 10597, 41743, 1159}, new int[]{4841, 21876, 722, 5767, 17631}, new int[]{7947, 23244, 10530, 30928, 1199}, new int[]{12689, 3840, 3800, 20762, 4620}, new int[]{3753, 33026, 7272, 18675, 65900}, new int[]{5353, 25448, 14299, 11189, 52169}, new int[]{13953, 5943, 3042, 22208, 79543}, new int[]{5692, 40764, 2285, 14982, 27672}, new int[]{14744, 24486, 7371, 38307, 463}, new int[]{14863, 17060, 10349, 23183, 5801}, new int[]{6550, 42324, 10523, 30108, 9681}, new int[]{2882, 31419, 10013, 25660, 73}, new int[]{1239, 32909, 10153, 5845, 26339}, new int[]{1870, 25273, 8445, 7108, 7752}, new int[]{3582, 30029, 9755, 36222, 9464}, new int[]{5534, 29738, 9931, 26714, 4409}, new int[]{605, 7403, 15137, 17259, 2565}, new int[]{9510, 19776, 3443, 42542, 44299}, new int[]{6006, 16582, 5428, 20145, 65010}, new int[]{5623, 43710, 4020, 29609, 4983}, new int[]{8565, 29663, 10378, 19013, 7123}, new int[]{4845, 38962, 7629, 27908, 13792}, new int[]{7625, 28085, 7687, 16866, 80283}, new int[]{12042, 21756, 3816, 9537, 1958}, new int[]{1357, 25448, 6324, 37205, 11290}, new int[]{8519, 36197, 13118, 26106, 3691}, new int[]{9999, 32990, 13882, 36559, 8630}, new int[]{692, 33636, 7404, 20629, 49681}, new int[]{15052, 30850, 14599, 27691, 51611}, new int[]{3478, 9955, 2142, 36704, 16126}, new int[]{10998, 17353, 2021, 37218, 24176}, new int[]{8290, 6045, 906, 36203, 99}, new int[]{1650, 23310, 8238, 21257, 5254}, new int[]{10375, 43244, 9541, 37358, 22812}, new int[]{1439, 12150, 11718, 36063, 5647}, new int[]{5242, 40049, 2391, 25065, 6182}, new int[]{14584, 32624, 13086, 19755, 48266}, new int[]{6799, 12431, 2604, 5378, 9320}, new int[]{8355, 25517, 4789, 29042, 16493}, new int[]{613, 24468, 11887, 27550, 94557}, new int[]{5738, 32556, 14096, 10278, 3768}, new int[]{4840, 29854, 7640, 25788, 2197}, new int[]{750, 16624, 11255, 8761, 10920}, new int[]{9733, 29999, 11030, 26584, 82018}, new int[]{1334, 25551, 13674, 10420, 20586}, new int[]{11791, 6170, 11352, 15456, 6542}, new int[]{1298, 39474, 8192, 30021, 4106}, new int[]{10719, 5467, 770, 22987, 6596}, new int[]{6228, 44657, 4213, 34058, 4777}, new int[]{2348, 29564, 3631, 38029, 8898}, new int[]{8477, 25757, 1091, 23206, 4958}, new int[]{1417, 42963, 8757, 12483, 13145}, new int[]{8482, 9517, 9947, 36696, 54922}, new int[]{11132, 31956, 14202, 20983, 4513}, new int[]{2108, 14538, 10867, 33835, 146}, new int[]{13068, 23595, 1384, 16225, 15490}, new int[]{5758, 4937, 6946, 43503, 37832}, new int[]{1031, 19572, 2174, 18251, 2310}, new int[]{10108, 39942, 14523, 43975, 2158}, new int[]{9271, 44690, 10941, 43720, 15}, new int[]{1823, 6985, 8675, 10713, 3468}, new int[]{10423, 19605, 14311, 10130, 7901}, new int[]{7493, 29253, 3650, 11408, 19229}, new int[]{8727, 9546, 9919, 13298, 3639}, new int[]{570, 28460, 9116, 9909, 68206}, new int[]{5632, 19567, 3012, 34626, 10255}, new int[]{3918, 14740, 3977, 35140, 16090}, new int[]{9579, 35013, 11112, 43081, 8139}, new int[]{4818, 14925, 4374, 11604, 79257}, new int[]{11944, 39664, 2866, 41482, 3181}, new int[]{10104, 34626, 4473, 13066, 41794}, new int[]{8083, 6582, 11499, 30087, 36624}, new int[]{10657, 20396, 6226, 13470, 49260}, new int[]{4628, 20404, 10343, 39963, 9573}, new int[]{5578, 26572, 2610, 16011, 3821}, new int[]{2558, 33609, 14359, 15952, 1043}, new int[]{14417, 21827, 9756, 9854, 4567}, new int[]{2776, 27372, 1829, 29880, 17272}, new int[]{15103, 29236, 8491, 15185, 23220}, new int[]{2972, 3563, 4959, 10464, 6540}, new int[]{10414, 39616, 738, 28254, 7922}, new int[]{9595, 36836, 10058, 30881, 3421}, new int[]{1949, 15091, 14277, 4081, 21934}, new int[]{9557, 23215, 13591, 42235, 1114}, new int[]{7686, 3978, 4266, 10535, 5246}, new int[]{1288, 13640, 5620, 26142, 30868}, new int[]{12312, 37664, 1416, 20189, 42180}, new int[]{6339, 17303, 12816, 6416, 7412}, new int[]{12409, 31869, 9132, 11596, 4489}, new int[]{7392, 24676, 8727, 7887, 1780}, new int[]{4517, 10764, 7195, 25636, 67305}, new int[]{11804, 21742, 13463, 19313, 1232}, new int[]{7680, 41842, 12557, 6499, 23229}, new int[]{5619, 28579, 13825, 5600, 86636}, new int[]{13527, 15684, 14426, 15985, 114}, new int[]{13818, 16550, 3727, 11754, 5191}, new int[]{14987, 18725, 6746, 30636, 725}, new int[]{13113, 17479, 8815, 4345, 16258}, new int[]{9861, 21312, 13870, 44170, 21732}, new int[]{3961, 20020, 4488, 9484, 6912}, new int[]{2878, 26487, 2163, 36675, 93035}, new int[]{5456, 41775, 9272, 36943, 3110}, new int[]{5209, 23513, 3058, 38317, 16853}, new int[]{12638, 43204, 12089, 21628, 14855}, new int[]{10846, 42272, 8098, 39399, 4712}, new int[]{3987, 22910, 685, 19675, 2567}, new int[]{5656, 45186, 3786, 13657, 28942}, new int[]{9302, 11540, 1616, 7700, 1911}, new int[]{13673, 4344, 7101, 31954, 5342}, new int[]{2850, 40004, 13344, 29852, 6914}, new int[]{9995, 19644, 11844, 41856, 18083}, new int[]{8862, 7700, 5511, 31310, 79218}, new int[]{6000, 45414, 1530, 28613, 41919}, new int[]{2465, 20273, 8947, 40223, 49177}, new int[]{1905, 21903, 10226, 7099, 890}, new int[]{9384, 14850, 14825, 6717, 8208}, new int[]{1707, 11384, 1665, 5316, 2303}, new int[]{14216, 26901, 14606, 8832, 10949}, new int[]{14341, 34910, 8427, 21196, 87267}, new int[]{4838, 15695, 14626, 7804, 13880}, new int[]{1045, 41617, 6290, 36177, 5895}, new int[]{10586, 31939, 9984, 19195, 32567}, new int[]{11627, 39047, 3697, 36079, 10862}, new int[]{14963, 41905, 8817, 30677, 1539}, new int[]{8319, 11759, 11180, 17257, 28496}, new int[]{3355, 12832, 2704, 30197, 89306}, new int[]{2687, 41781, 9657, 40667, 2748}, new int[]{4327, 39405, 10291, 28022, 9727}, new int[]{14909, 26494, 14476, 32593, 60355}, new int[]{6521, 37095, 13143, 4882, 62482}, new int[]{11739, 20816, 14035, 31508, 6294}, new int[]{13521, 41638, 13691, 26859, 5995}, new int[]{5495, 23594, 11481, 35948, 14849}, new int[]{14319, 4234, 1814, 12215, 3889}, new int[]{2132, 43634, 12552, 26727, 17294}, new int[]{11652, 13572, 8243, 39808, 430}, new int[]{7433, 5470, 14491, 4832, 32692}, new int[]{4854, 37602, 6566, 19745, 5142}, new int[]{4883, 5083, 4900, 18814, 3200}, new int[]{14364, 31988, 4673, 15277, 24197}, new int[]{8685, 6671, 12369, 13824, 8366}, new int[]{1876, 20754, 2171, 36519, 15118}, new int[]{5559, 25024, 9629, 39175, 12678}, new int[]{14544, 32140, 9628, 20775, 3041}, new int[]{8572, 41923, 11430, 4823, 7237}, new int[]{2682, 8773, 14587, 35165, 65260}})));
    }

    @Test
    public void testCostRoad28() { 
        runAllImplementations(test -> assertEquals(9825, ((MinimumCostRoad)test).solution(new int[]{11429, 22965}, new int[]{39876, 24919},
                new int[][]{{12375, 24604, 26516, 23142, 2058}, new int[]{36016, 23320, 19873, 24304, 8859}, new int[]{39433, 24103, 15620, 23182, 24665}, new int[]{38814, 23942, 27695, 23567, 10458}, new int[]{28297, 24863, 19042, 24055, 6710}, new int[]{18441, 24783, 12919, 23344, 170}, new int[]{33163, 23768, 20321, 23303, 83922}, new int[]{19567, 24021, 19655, 23545, 520}, new int[]{20896, 23121, 29323, 24070, 3398}, new int[]{15758, 24536, 20871, 23424, 6151}, new int[]{13768, 23989, 14575, 23389, 835}, new int[]{13706, 24861, 35594, 24436, 2906}, new int[]{34260, 23430, 14034, 24545, 32730}, new int[]{27563, 24842, 36047, 24297, 90155}, new int[]{13221, 24201, 15201, 24453, 94297}, new int[]{24662, 23512, 34465, 23967, 5448}, new int[]{17909, 23003, 39801, 23919, 17461}, new int[]{18521, 23421, 16568, 24459, 36225}, new int[]{19894, 24258, 13995, 24667, 5779}, new int[]{21732, 24777, 15615, 23655, 5497}, new int[]{33883, 23883, 30643, 23673, 2904}, new int[]{23992, 24657, 14259, 23676, 9741}, new int[]{27889, 23132, 24381, 24378, 2627}, new int[]{13411, 24018, 17837, 23688, 64615}, new int[]{39827, 23723, 32603, 23771, 2937}, new int[]{26508, 24300, 37057, 23461, 9730}, new int[]{22327, 23408, 22027, 23964, 22445}, new int[]{27364, 24235, 32446, 23207, 3968}, new int[]{34822, 24550, 12605, 24261, 13023}, new int[]{34181, 22992, 38288, 24652, 2759}, new int[]{26566, 24700, 37965, 23808, 6878}, new int[]{26409, 23819, 18499, 23728, 235}, new int[]{31295, 24778, 30228, 23683, 42047}, new int[]{22194, 23994, 31429, 24503, 1979}, new int[]{17396, 24657, 33735, 24265, 8734}, new int[]{28652, 24196, 23287, 24218, 4782}, new int[]{25295, 24644, 37861, 24198, 9299}, new int[]{15203, 23882, 19555, 24619, 1832}, new int[]{31640, 23301, 21112, 24013, 10550}, new int[]{13143, 23561, 19234, 24299, 4579}, new int[]{22844, 24721, 35023, 24639, 79749}, new int[]{31866, 23152, 37311, 24549, 4740}, new int[]{32170, 24817, 32207, 23233, 173}, new int[]{21227, 24636, 33480, 23869, 21820}, new int[]{28838, 23885, 21869, 23719, 80007}, new int[]{17555, 23742, 24899, 24838, 7509}, new int[]{17441, 23116, 33910, 23444, 2975}, new int[]{17456, 23508, 35077, 23026, 4783}, new int[]{36524, 24471, 26950, 23308, 3274}, new int[]{15192, 24667, 25079, 24434, 9168}, new int[]{21369, 24750, 21904, 23998, 683}, new int[]{32018, 23209, 19421, 22998, 1790}, new int[]{31663, 22966, 27200, 23933, 4845}, new int[]{17507, 23336, 22687, 24315, 2781}, new int[]{16341, 24450, 23168, 24551, 78777}, new int[]{34155, 24059, 16263, 24670, 4342}, new int[]{14217, 24902, 29344, 23159, 15043}, new int[]{22595, 23082, 13999, 23518, 8551}, new int[]{32323, 23910, 26905, 24652, 60162}, new int[]{23017, 23613, 39293, 24259, 8208}, new int[]{27031, 23156, 24712, 24698, 53614}, new int[]{33280, 23478, 31148, 24136, 983}, new int[]{12097, 23152, 16204, 24222, 10750}, new int[]{16017, 23477, 25725, 24651, 836}, new int[]{28655, 24558, 12468, 23342, 17204}, new int[]{18080, 24127, 28745, 23210, 2428}, new int[]{27447, 23062, 31121, 23861, 1476}, new int[]{28625, 23640, 26446, 23380, 23226}, new int[]{21492, 23044, 12307, 23586, 10690}, new int[]{37908, 24759, 38802, 23665, 89}, new int[]{20643, 24856, 35097, 24736, 6888}, new int[]{30452, 24370, 11599, 23147, 15091}, new int[]{21748, 23292, 24900, 24280, 44795}, new int[]{38861, 24039, 27101, 24185, 22838}, new int[]{28248, 24351, 19878, 24282, 5132}, new int[]{18145, 24679, 39014, 24195, 45282}, new int[]{33281, 23410, 24608, 23150, 12403}, new int[]{12740, 24652, 14217, 24442, 18122}, new int[]{20098, 23619, 21022, 24698, 85054}, new int[]{19571, 23818, 12023, 23796, 33017}, new int[]{27283, 24836, 35593, 24302, 731}, new int[]{36096, 24362, 34340, 24254, 679}, new int[]{17181, 24420, 12108, 23146, 1018}, new int[]{22769, 24531, 32055, 23470, 6505}, new int[]{26529, 23820, 22386, 23303, 1531}, new int[]{29539, 24818, 26417, 24408, 40192}, new int[]{34784, 23560, 39732, 24627, 2885}, new int[]{20524, 24334, 38743, 24803, 2498}, new int[]{38054, 24661, 29285, 24181, 48562}, new int[]{18407, 23098, 35506, 24303, 6493}, new int[]{33983, 24615, 29012, 24242, 5265}, new int[]{17620, 24129, 22281, 24369, 3939}, new int[]{23663, 24047, 30709, 24462, 3707}, new int[]{19141, 23517, 17512, 23669, 1440}, new int[]{19978, 23519, 27143, 24481, 7425}, new int[]{30834, 23384, 38286, 24038, 5583}, new int[]{35584, 23260, 16163, 23549, 5302}, new int[]{23102, 24898, 18909, 23655, 3393}, new int[]{31108, 23590, 34209, 23149, 58852}, new int[]{32219, 23506, 13245, 24066, 65209}, new int[]{35528, 24213, 34795, 23884, 574}, new int[]{21866, 24813, 34927, 23250, 5507}, new int[]{19017, 24480, 33945, 23867, 11979}, new int[]{13140, 23435, 19669, 23793, 29695}, new int[]{38231, 23363, 24545, 23620, 3436}, new int[]{23700, 24771, 23540, 23799, 23039}, new int[]{14807, 23248, 38689, 23998, 85711}, new int[]{11788, 24398, 27846, 24617, 5833}, new int[]{18412, 23661, 38320, 23810, 12066}, new int[]{30498, 23393, 27049, 23544, 2769}, new int[]{11671, 23575, 32486, 24137, 16833}, new int[]{33903, 24896, 30831, 23708, 2777}, new int[]{33931, 24137, 32067, 23463, 2202}, new int[]{15473, 24151, 14207, 23260, 460}, new int[]{32818, 24900, 26198, 24291, 4502}, new int[]{27438, 24181, 32037, 23704, 1583}, new int[]{16782, 24875, 14333, 23685, 39603}, new int[]{18565, 23898, 33527, 24054, 11094}, new int[]{13108, 23360, 29512, 24147, 8096}, new int[]{19415, 23135, 32317, 23228, 45408}, new int[]{34436, 23092, 29011, 23025, 4219}, new int[]{26606, 23125, 29115, 24007, 3059}, new int[]{13727, 23996, 14289, 23241, 234}, new int[]{35957, 23221, 16020, 24187, 12520}, new int[]{19838, 23729, 28787, 23264, 8360}, new int[]{15225, 23842, 13238, 24075, 1566}, new int[]{22526, 23788, 11770, 24121, 5253}, new int[]{29925, 23971, 13437, 23019, 15838}, new int[]{28657, 24587, 35158, 24547, 45970}, new int[]{31250, 24160, 12622, 23829, 8737}, new int[]{12596, 23933, 17838, 23112, 4002}, new int[]{27301, 24067, 11733, 23324, 2206}, new int[]{16477, 24078, 16929, 23426, 48209}, new int[]{19507, 23238, 20579, 24495, 1256}, new int[]{38517, 24698, 13895, 24107, 1801}, new int[]{23405, 23772, 37455, 23158, 4608}, new int[]{36890, 23057, 20308, 23807, 14225}, new int[]{37988, 24206, 17115, 24505, 8177}, new int[]{26598, 23430, 29378, 24160, 1979}, new int[]{18767, 24289, 15141, 24352, 1470}, new int[]{39423, 23231, 33468, 24903, 64732}, new int[]{28135, 24676, 31948, 23848, 2055}, new int[]{25094, 23049, 13650, 23988, 26432}, new int[]{14187, 23761, 39394, 24088, 16933}, new int[]{28791, 23878, 18411, 24781, 39407}, new int[]{11906, 23771, 26677, 23226, 59093}, new int[]{21350, 24003, 30812, 23602, 54882}, new int[]{19031, 23430, 34224, 24622, 14214}, new int[]{14517, 23177, 20706, 24630, 2300}, new int[]{26201, 24378, 17757, 23775, 6011}, new int[]{29444, 24507, 34094, 23660, 36189}, new int[]{24081, 24179, 18300, 23065, 3636}, new int[]{19750, 24355, 32862, 23081, 1129}, new int[]{12767, 23557, 29928, 23888, 7657}, new int[]{24083, 23361, 11544, 23779, 23}, new int[]{26436, 24417, 32918, 24115, 51800}, new int[]{21858, 23408, 18042, 23294, 50632}, new int[]{12208, 24124, 13357, 24200, 686}, new int[]{32671, 23957, 14053, 23925, 5619}, new int[]{38370, 23209, 12134, 24576, 7288}, new int[]{37202, 23662, 26555, 23667, 1876}, new int[]{33646, 23436, 12533, 24658, 9215}, new int[]{24182, 23983, 29085, 23985, 3236}, new int[]{18721, 23104, 14723, 23665, 625}, new int[]{30380, 24858, 26612, 23644, 1154}, new int[]{35748, 24207, 19770, 23845, 8761}, new int[]{18193, 23022, 20421, 24451, 3579}, new int[]{15993, 24475, 12102, 23334, 1748}, new int[]{19251, 23975, 26187, 24800, 68}, new int[]{34068, 24771, 36759, 24703, 1679}, new int[]{26123, 23986, 20019, 24011, 4416}, new int[]{14411, 23526, 20410, 24349, 39974}, new int[]{39281, 24382, 18750, 23508, 3591}, new int[]{20845, 23038, 21332, 24787, 53969}, new int[]{32491, 24259, 17693, 24049, 14584}, new int[]{16240, 24391, 26760, 23557, 10740}, new int[]{37190, 23322, 30633, 24417, 4954}, new int[]{39525, 23681, 13026, 23484, 52349}, new int[]{18768, 23683, 27905, 24050, 1549}, new int[]{21847, 24015, 32611, 23189, 1910}, new int[]{30483, 23921, 19789, 23604, 5907}, new int[]{33807, 23593, 25384, 24489, 4986}})));
    }

    @Test
    public void testCostRoad29() { 
        runAllImplementations(test -> assertEquals(180098, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{100000, 100000},
                new int[][]{{100, 100, 200, 200, 1}, new int[]{200, 200, 300, 300, 1}, new int[]{300, 300, 400, 400, 1}, new int[]{400, 400, 500, 500, 1}, new int[]{500, 500, 600, 600, 1}, new int[]{600, 600, 700, 700, 1}, new int[]{700, 700, 800, 800, 1}, new int[]{800, 800, 900, 900, 1}, new int[]{900, 900, 1000, 1000, 1}, new int[]{1000, 1000, 1100, 1100, 1}, new int[]{1100, 1100, 1200, 1200, 1}, new int[]{1200, 1200, 1300, 1300, 1}, new int[]{1300, 1300, 1400, 1400, 1}, new int[]{1400, 1400, 1500, 1500, 1}, new int[]{1500, 1500, 1600, 1600, 1}, new int[]{1600, 1600, 1700, 1700, 1}, new int[]{1700, 1700, 1800, 1800, 1}, new int[]{1800, 1800, 1900, 1900, 1}, new int[]{1900, 1900, 2000, 2000, 1}, new int[]{2000, 2000, 2100, 2100, 1}, new int[]{2100, 2100, 2200, 2200, 1}, new int[]{2200, 2200, 2300, 2300, 1}, new int[]{2300, 2300, 2400, 2400, 1}, new int[]{2400, 2400, 2500, 2500, 1}, new int[]{2500, 2500, 2600, 2600, 1}, new int[]{2600, 2600, 2700, 2700, 1}, new int[]{2700, 2700, 2800, 2800, 1}, new int[]{2800, 2800, 2900, 2900, 1}, new int[]{2900, 2900, 3000, 3000, 1}, new int[]{3000, 3000, 3100, 3100, 1}, new int[]{3100, 3100, 3200, 3200, 1}, new int[]{3200, 3200, 3300, 3300, 1}, new int[]{3300, 3300, 3400, 3400, 1}, new int[]{3400, 3400, 3500, 3500, 1}, new int[]{3500, 3500, 3600, 3600, 1}, new int[]{3600, 3600, 3700, 3700, 1}, new int[]{3700, 3700, 3800, 3800, 1}, new int[]{3800, 3800, 3900, 3900, 1}, new int[]{3900, 3900, 4000, 4000, 1}, new int[]{4000, 4000, 4100, 4100, 1}, new int[]{4100, 4100, 4200, 4200, 1}, new int[]{4200, 4200, 4300, 4300, 1}, new int[]{4300, 4300, 4400, 4400, 1}, new int[]{4400, 4400, 4500, 4500, 1}, new int[]{4500, 4500, 4600, 4600, 1}, new int[]{4600, 4600, 4700, 4700, 1}, new int[]{4700, 4700, 4800, 4800, 1}, new int[]{4800, 4800, 4900, 4900, 1}, new int[]{4900, 4900, 5000, 5000, 1}, new int[]{5000, 5000, 5100, 5100, 1}, new int[]{5100, 5100, 5200, 5200, 1}, new int[]{5200, 5200, 5300, 5300, 1}, new int[]{5300, 5300, 5400, 5400, 1}, new int[]{5400, 5400, 5500, 5500, 1}, new int[]{5500, 5500, 5600, 5600, 1}, new int[]{5600, 5600, 5700, 5700, 1}, new int[]{5700, 5700, 5800, 5800, 1}, new int[]{5800, 5800, 5900, 5900, 1}, new int[]{5900, 5900, 6000, 6000, 1}, new int[]{6000, 6000, 6100, 6100, 1}, new int[]{6100, 6100, 6200, 6200, 1}, new int[]{6200, 6200, 6300, 6300, 1}, new int[]{6300, 6300, 6400, 6400, 1}, new int[]{6400, 6400, 6500, 6500, 1}, new int[]{6500, 6500, 6600, 6600, 1}, new int[]{6600, 6600, 6700, 6700, 1}, new int[]{6700, 6700, 6800, 6800, 1}, new int[]{6800, 6800, 6900, 6900, 1}, new int[]{6900, 6900, 7000, 7000, 1}, new int[]{7000, 7000, 7100, 7100, 1}, new int[]{7100, 7100, 7200, 7200, 1}, new int[]{7200, 7200, 7300, 7300, 1}, new int[]{7300, 7300, 7400, 7400, 1}, new int[]{7400, 7400, 7500, 7500, 1}, new int[]{7500, 7500, 7600, 7600, 1}, new int[]{7600, 7600, 7700, 7700, 1}, new int[]{7700, 7700, 7800, 7800, 1}, new int[]{7800, 7800, 7900, 7900, 1}, new int[]{7900, 7900, 8000, 8000, 1}, new int[]{8000, 8000, 8100, 8100, 1}, new int[]{8100, 8100, 8200, 8200, 1}, new int[]{8200, 8200, 8300, 8300, 1}, new int[]{8300, 8300, 8400, 8400, 1}, new int[]{8400, 8400, 8500, 8500, 1}, new int[]{8500, 8500, 8600, 8600, 1}, new int[]{8600, 8600, 8700, 8700, 1}, new int[]{8700, 8700, 8800, 8800, 1}, new int[]{8800, 8800, 8900, 8900, 1}, new int[]{8900, 8900, 9000, 9000, 1}, new int[]{9000, 9000, 9100, 9100, 1}, new int[]{9100, 9100, 9200, 9200, 1}, new int[]{9200, 9200, 9300, 9300, 1}, new int[]{9300, 9300, 9400, 9400, 1}, new int[]{9400, 9400, 9500, 9500, 1}, new int[]{9500, 9500, 9600, 9600, 1}, new int[]{9600, 9600, 9700, 9700, 1}, new int[]{9700, 9700, 9800, 9800, 1}, new int[]{9800, 9800, 9900, 9900, 1}, new int[]{9900, 9900, 10000, 10000, 1}, new int[]{10000, 10000, 10100, 10100, 1}, new int[]{100, 100, 200, 200, 1}, new int[]{200, 200, 300, 300, 1}, new int[]{300, 300, 400, 400, 1}, new int[]{400, 400, 500, 500, 1}, new int[]{500, 500, 600, 600, 1}, new int[]{600, 600, 700, 700, 1}, new int[]{700, 700, 800, 800, 1}, new int[]{800, 800, 900, 900, 1}, new int[]{900, 900, 1000, 1000, 1}, new int[]{1000, 1000, 1100, 1100, 1}, new int[]{1100, 1100, 1200, 1200, 1}, new int[]{1200, 1200, 1300, 1300, 1}, new int[]{1300, 1300, 1400, 1400, 1}, new int[]{1400, 1400, 1500, 1500, 1}, new int[]{1500, 1500, 1600, 1600, 1}, new int[]{1600, 1600, 1700, 1700, 1}, new int[]{1700, 1700, 1800, 1800, 1}, new int[]{1800, 1800, 1900, 1900, 1}, new int[]{1900, 1900, 2000, 2000, 1}, new int[]{2000, 2000, 2100, 2100, 1}, new int[]{2100, 2100, 2200, 2200, 1}, new int[]{2200, 2200, 2300, 2300, 1}, new int[]{2300, 2300, 2400, 2400, 1}, new int[]{2400, 2400, 2500, 2500, 1}, new int[]{2500, 2500, 2600, 2600, 1}, new int[]{2600, 2600, 2700, 2700, 1}, new int[]{2700, 2700, 2800, 2800, 1}, new int[]{2800, 2800, 2900, 2900, 1}, new int[]{2900, 2900, 3000, 3000, 1}, new int[]{3000, 3000, 3100, 3100, 1}, new int[]{3100, 3100, 3200, 3200, 1}, new int[]{3200, 3200, 3300, 3300, 1}, new int[]{3300, 3300, 3400, 3400, 1}, new int[]{3400, 3400, 3500, 3500, 1}, new int[]{3500, 3500, 3600, 3600, 1}, new int[]{3600, 3600, 3700, 3700, 1}, new int[]{3700, 3700, 3800, 3800, 1}, new int[]{3800, 3800, 3900, 3900, 1}, new int[]{3900, 3900, 4000, 4000, 1}, new int[]{4000, 4000, 4100, 4100, 1}, new int[]{4100, 4100, 4200, 4200, 1}, new int[]{4200, 4200, 4300, 4300, 1}, new int[]{4300, 4300, 4400, 4400, 1}, new int[]{4400, 4400, 4500, 4500, 1}, new int[]{4500, 4500, 4600, 4600, 1}, new int[]{4600, 4600, 4700, 4700, 1}, new int[]{4700, 4700, 4800, 4800, 1}, new int[]{4800, 4800, 4900, 4900, 1}, new int[]{4900, 4900, 5000, 5000, 1}, new int[]{5000, 5000, 5100, 5100, 1}, new int[]{5100, 5100, 5200, 5200, 1}, new int[]{5200, 5200, 5300, 5300, 1}, new int[]{5300, 5300, 5400, 5400, 1}, new int[]{5400, 5400, 5500, 5500, 1}, new int[]{5500, 5500, 5600, 5600, 1}, new int[]{5600, 5600, 5700, 5700, 1}, new int[]{5700, 5700, 5800, 5800, 1}, new int[]{5800, 5800, 5900, 5900, 1}, new int[]{5900, 5900, 6000, 6000, 1}, new int[]{6000, 6000, 6100, 6100, 1}, new int[]{6100, 6100, 6200, 6200, 1}, new int[]{6200, 6200, 6300, 6300, 1}, new int[]{6300, 6300, 6400, 6400, 1}, new int[]{6400, 6400, 6500, 6500, 1}, new int[]{6500, 6500, 6600, 6600, 1}, new int[]{6600, 6600, 6700, 6700, 1}, new int[]{6700, 6700, 6800, 6800, 1}, new int[]{6800, 6800, 6900, 6900, 1}, new int[]{6900, 6900, 7000, 7000, 1}, new int[]{7000, 7000, 7100, 7100, 1}, new int[]{7100, 7100, 7200, 7200, 1}, new int[]{7200, 7200, 7300, 7300, 1}, new int[]{7300, 7300, 7400, 7400, 1}, new int[]{7400, 7400, 7500, 7500, 1}, new int[]{7500, 7500, 7600, 7600, 1}, new int[]{7600, 7600, 7700, 7700, 1}, new int[]{7700, 7700, 7800, 7800, 1}, new int[]{7800, 7800, 7900, 7900, 1}, new int[]{7900, 7900, 8000, 8000, 1}, new int[]{8000, 8000, 8100, 8100, 1}, new int[]{8100, 8100, 8200, 8200, 1}, new int[]{8200, 8200, 8300, 8300, 1}, new int[]{8300, 8300, 8400, 8400, 1}, new int[]{8400, 8400, 8500, 8500, 1}, new int[]{8500, 8500, 8600, 8600, 1}, new int[]{8600, 8600, 8700, 8700, 1}, new int[]{8700, 8700, 8800, 8800, 1}, new int[]{8800, 8800, 8900, 8900, 1}, new int[]{8900, 8900, 9000, 9000, 1}, new int[]{9000, 9000, 9100, 9100, 1}, new int[]{9100, 9100, 9200, 9200, 1}, new int[]{9200, 9200, 9300, 9300, 1}, new int[]{9300, 9300, 9400, 9400, 1}, new int[]{9400, 9400, 9500, 9500, 1}, new int[]{9500, 9500, 9600, 9600, 1}, new int[]{9600, 9600, 9700, 9700, 1}, new int[]{9700, 9700, 9800, 9800, 1}, new int[]{9800, 9800, 9900, 9900, 1}, new int[]{9900, 9900, 10000, 10000, 1}, new int[]{10000, 10000, 10100, 10100, 1}})));
    }

    @Test
    public void testCostRoad30() { 
        runAllImplementations(test -> assertEquals(20000, ((MinimumCostRoad)test).solution(new int[]{1, 1}, new int[]{100000, 100000},
                new int[][]{{1, 1, 100000, 99999, 19999}})));
    }

}
